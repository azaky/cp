<html><head>
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
 <title>Analysis 68: Number Triangles</title> </head><body 
background="numtri_files/bg3.jpg">
<img src="numtri_files/cow1.jpg" width="742" height="118">
<center>
<b><font size="7">Number Triangles</font></b><br>
Russ Cox
</center>

We keep track (in the "best" array) of total for the best path ending
in a given column of the triangle.  Viewing the input, a path through
the triangle always goes down or down and to the right.  To process a
new row, the best path total ending at a given column is the maximum of
the best path total ending at that column or the one to its left, plus
the number in the new row at that column.

We keep only the best totals for the current row (in "best") and the
previous row (in "oldbest").

<pre>#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;assert.h&gt;

#define MAXR 1000

int
max(int a, int b)
{
	return a &gt; b ? a : b;
}

void
main(void)
{
	int best[MAXR], oldbest[MAXR];
	int i, j, r, n, m;
	FILE *fin, *fout;

	fin = fopen("numtri.in", "r");
	assert(fin != NULL);
	fout = fopen("numtri.out", "w");
	assert(fout != NULL);

	fscanf(fin, "%d", &amp;r);

	for(i=0; i&lt;MAXR; i++)
		best[i] = 0;

	for(i=1; i&lt;=r; i++) {
		memmove(oldbest, best, sizeof oldbest);
		for(j=0; j&lt;i; j++) {
			fscanf(fin, "%d", &amp;n);
			if(j == 0)
				best[j] = oldbest[j] + n;
			else
				best[j] = max(oldbest[j], oldbest[j-1]) + n;
		}
	}

	m = 0;
	for(i=0; i&lt;r; i++)
		if(best[i] &gt; m)
			m = best[i];

	fprintf(fout, "%d\n", m);
	exit(0);
}
</pre>

<center>
<a href="http://ace.delos.com/usacogate?a=Ndba0387uwg">USACO Gateway</a>
 | <a href="mailto:kolstad@ace.delos.com">Comment or Question</a>
</center>
</body></html>