/*
ID: a_zaky01
PROG: empty
LANG: C++
*/

#include <vector>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <algorithm>
#include <utility>
#include <numeric>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cassert>
#include <limits>
using namespace std;

#ifdef DEBUG
	#define debug(...) printf(__VA_ARGS__)
	#define GetTime() fprintf(stderr,"Running time: %.3lf second\n",((double)clock())/CLOCKS_PER_SEC)
#else
	#define debug(...) 
	#define GetTime() 
#endif

//type definitions
typedef long long ll;
typedef double db;
typedef pair<int,int> pii;
typedef vector<int> vint;

//abbreviations
#define A first
#define B second
#define MP make_pair
#define PB push_back

//macros
#define REP(i,n) for (int i = 0; i < (n); ++i)
#define REPD(i,n) for (int i = (n)-1; 0 <= i; --i)
#define FOR(i,a,b) for (int i = (a); i <= (b); ++i)
#define FORD(i,a,b) for (int i = (a); (b) <= i; --i)
#define FORIT(it,c) for (__typeof ((c).begin()) it = (c).begin(); it != (c).end(); it++)
#define ALL(a) (a).begin(),(a).end()
#define SZ(a) ((int)(a).size())
#define RESET(a,x) memset(a,x,sizeof(a))
#define EXIST(a,s) ((s).find(a) != (s).end())
#define MX(a,b) a = max((a),(b));
#define MN(a,b) a = min((a),(b));

inline void OPEN(const string &s) {
	freopen((s + ".in").c_str(), "r", stdin);
	freopen((s + ".out").c_str(), "w", stdout);
}

/* -------------- end of azaky's template -------------- */

#define MAXN 3000300
int n, k, p[MAXN], x, y, a, b;

int findSet(int x){
	if (x == p[x]) return x;
	else return p[x] = findSet(p[x]);
}

int main(){
	OPEN("empty");
	scanf("%d%d",&n,&k);
	REP(i,n) p[i] = i;
	REP(_i,k){
		scanf("%d%d%d%d",&x,&y,&a,&b);
		int pos = b, now, next;
		FOR(i,1,y){
			pos += a;
			pos %= n;
			REP(j,x){
				now = findSet(pos);
				next = now+1;
				next %= n;
				p[now] = findSet(next);
			}
		}
	}
	REP(i,n) if (p[i] == i){
		printf("%d\n",i);
		break;
	}
	
	return 0;
}

/* Generated by UsacoTemp v3.0 */
