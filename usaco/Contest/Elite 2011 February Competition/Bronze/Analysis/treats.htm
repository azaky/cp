<html><head>
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
 <title>USACO FEB11 treats Analysis</title> 
<style type="text/css">
body       {
	     font-family:Verdana,Helvetica,Tahoma,sans-serif,Arial,Lucida;
	   }
</style>
</head><body bgcolor="#ffffff">
<center><img src="treats_files/cow1.jpg" width="742" height="118"></center>
<h2>USACO FEB11 Problem 'treats' Analysis</h2>
<h4>by Fatih Gelgi</h4>
<p>The straightforward solution is to apply the heuristic given in the 
problem:</p>

<ol>
	<li>Find the highest rated cow that is not used before
	</li><li>Swap its row as above as possible
	</li><li>Swap its column as left as possible
	</li><li>Mark the cow as used, go to step 1
</li></ol>

<p>Here, a row/column swapping function will be helpful for us:
</p><div><div id="highlighter_97129" class="syntaxhighlighter  cpp"><div
 class="toolbar"><span><a href="#" class="toolbar_item command_help 
help">?</a></span></div><table border="0" cellpadding="0" 
cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 
index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div 
class="line number3 index2 alt2">3</div><div class="line number4 index3 
alt1">4</div><div class="line number5 index4 alt2">5</div><div 
class="line number6 index5 alt1">6</div><div class="line number7 index6 
alt2">7</div><div class="line number8 index7 alt1">8</div><div 
class="line number9 index8 alt2">9</div></td><td class="code"><div 
class="container"><div class="line number1 index0 alt2"><code class="cpp
 keyword bold">void</code> <code class="cpp plain">swapRC(</code><code 
class="cpp color1 bold">int</code> <code class="cpp plain">a,</code><code
 class="cpp color1 bold">int</code> <code class="cpp plain">b,</code><code
 class="cpp color1 bold">bool</code> <code class="cpp plain">isCol)</code></div><div
 class="line number2 index1 alt1"><code class="cpp plain">{</code></div><div
 class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp color1 bold">int</code> <code class="cpp plain">l=(isCol ? n
 : m);</code></div><div class="line number4 index3 alt1"><code 
class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp 
keyword bold">for</code> <code class="cpp plain">(</code><code 
class="cpp color1 bold">int</code> <code class="cpp plain">i=0; i&lt;l; 
i++)</code></div><div class="line number5 index4 alt2"><code class="cpp 
spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code 
class="cpp keyword bold">if</code> <code class="cpp plain">(isCol)</code></div><div
 class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp plain">swap(mat[i][a],mat[i][b]);&nbsp; </code><code 
class="cpp comments">// swap columns</code></div><div class="line 
number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp keyword bold">else</code></div><div class="line number8 
index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp plain">swap(mat[a][i],mat[b][i]);&nbsp; </code><code 
class="cpp comments">// swap rows</code></div><div class="line number9 
index8 alt2"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>

<p>The function above swaps rows a and b if <tt>isCol</tt> is false. 
When
<tt>isCol</tt> is true, it swaps columns a and b.</p>

<p>Let (y,x) is the position of the current highest rated cow in the 
matrix. 
Then we can move it upwards as follows:
</p><div><div id="highlighter_479655" class="syntaxhighlighter  cpp"><div
 class="toolbar"><span><a href="#" class="toolbar_item command_help 
help">?</a></span></div><table border="0" cellpadding="0" 
cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 
index0 alt2">1</div></td><td class="code"><div class="container"><div 
class="line number1 index0 alt2"><code class="cpp keyword bold">for</code>
 <code class="cpp plain">( ; y&gt;limy+1; y--) swapRC(y,y-1,</code><code
 class="cpp keyword bold">false</code><code class="cpp plain">);</code></div></div></td></tr></tbody></table></div></div>

<p><tt>limy</tt> is the largest row that former higher-rated cows are 
placed. 
Observe that the current highest rated cow cannot move upwards reaching 
that row
unless it is already above. We use similar method for swapping columns.
</p><div><div id="highlighter_734192" class="syntaxhighlighter  cpp"><div
 class="toolbar"><span><a href="#" class="toolbar_item command_help 
help">?</a></span></div><table border="0" cellpadding="0" 
cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 
index0 alt2">1</div></td><td class="code"><div class="container"><div 
class="line number1 index0 alt2"><code class="cpp keyword bold">for</code>
 <code class="cpp plain">( ; x&gt;limx+1; x--) swapRC(x,x-1,</code><code
 class="cpp keyword bold">true</code><code class="cpp plain">);</code></div></div></td></tr></tbody></table></div></div>

<p>Finally, we need to mark the location of the cow, and update the 
limits:
</p><div><div id="highlighter_527432" class="syntaxhighlighter  cpp"><div
 class="toolbar"><span><a href="#" class="toolbar_item command_help 
help">?</a></span></div><table border="0" cellpadding="0" 
cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 
index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div 
class="line number3 index2 alt2">3</div></td><td class="code"><div 
class="container"><div class="line number1 index0 alt2"><code class="cpp
 plain">mark[y][x]=</code><code class="cpp keyword bold">true</code><code
 class="cpp plain">;</code></div><div class="line number2 index1 alt1"><code
 class="cpp keyword bold">if</code> <code class="cpp plain">(limy&lt;y) 
limy=y;</code></div><div class="line number3 index2 alt2"><code 
class="cpp keyword bold">if</code> <code class="cpp plain">(limx&lt;x) 
limx=x;</code></div></div></td></tr></tbody></table></div></div>

<p>Below is an example solution:</p>

<div><div id="highlighter_27" class="syntaxhighlighter  cpp"><div 
class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table
 border="0" cellpadding="0" cellspacing="0"><tbody><tr><td 
class="gutter"><div class="line number1 index0 alt2">1</div><div 
class="line number2 index1 alt1">2</div><div class="line number3 index2 
alt2">3</div><div class="line number4 index3 alt1">4</div><div 
class="line number5 index4 alt2">5</div><div class="line number6 index5 
alt1">6</div><div class="line number7 index6 alt2">7</div><div 
class="line number8 index7 alt1">8</div><div class="line number9 index8 
alt2">9</div><div class="line number10 index9 alt1">10</div><div 
class="line number11 index10 alt2">11</div><div class="line number12 
index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div
 class="line number14 index13 alt1">14</div><div class="line number15 
index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div
 class="line number17 index16 alt2">17</div><div class="line number18 
index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div
 class="line number20 index19 alt1">20</div><div class="line number21 
index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div
 class="line number23 index22 alt2">23</div><div class="line number24 
index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div
 class="line number26 index25 alt1">26</div><div class="line number27 
index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div
 class="line number29 index28 alt2">29</div><div class="line number30 
index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div
 class="line number32 index31 alt1">32</div><div class="line number33 
index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div
 class="line number35 index34 alt2">35</div><div class="line number36 
index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div
 class="line number38 index37 alt1">38</div><div class="line number39 
index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div
 class="line number41 index40 alt2">41</div><div class="line number42 
index41 alt1">42</div><div class="line number43 index42 alt2">43</div><div
 class="line number44 index43 alt1">44</div><div class="line number45 
index44 alt2">45</div><div class="line number46 index45 alt1">46</div><div
 class="line number47 index46 alt2">47</div><div class="line number48 
index47 alt1">48</div><div class="line number49 index48 alt2">49</div><div
 class="line number50 index49 alt1">50</div><div class="line number51 
index50 alt2">51</div><div class="line number52 index51 alt1">52</div><div
 class="line number53 index52 alt2">53</div><div class="line number54 
index53 alt1">54</div><div class="line number55 index54 alt2">55</div><div
 class="line number56 index55 alt1">56</div><div class="line number57 
index56 alt2">57</div><div class="line number58 index57 alt1">58</div><div
 class="line number59 index58 alt2">59</div></td><td class="code"><div 
class="container"><div class="line number1 index0 alt2"><code class="cpp
 preprocessor">#include &lt;fstream&gt;</code></div><div class="line 
number2 index1 alt1"><code class="cpp preprocessor">#define MAX 25</code></div><div
 class="line number3 index2 alt2"><code class="cpp keyword bold">using</code>
 <code class="cpp keyword bold">namespace</code> <code class="cpp plain">std;</code></div><div
 class="line number4 index3 alt1">&nbsp;</div><div class="line number5 
index4 alt2"><code class="cpp color1 bold">int</code> <code class="cpp 
plain">n,m,mat[MAX][MAX],limy=-1,limx=-1;</code></div><div class="line 
number6 index5 alt1"><code class="cpp color1 bold">bool</code> <code 
class="cpp plain">mark[MAX][MAX];</code></div><div class="line number7 
index6 alt2">&nbsp;</div><div class="line number8 index7 alt1"><code 
class="cpp comments">// swap function - row or column</code></div><div 
class="line number9 index8 alt2"><code class="cpp keyword bold">void</code>
 <code class="cpp plain">swapRC(</code><code class="cpp color1 bold">int</code>
 <code class="cpp plain">a,</code><code class="cpp color1 bold">int</code>
 <code class="cpp plain">b,</code><code class="cpp color1 bold">bool</code>
 <code class="cpp plain">isCol)</code></div><div class="line number10 
index9 alt1"><code class="cpp plain">{</code></div><div class="line 
number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp color1 bold">int</code> <code class="cpp plain">l=(isCol ? n
 : m);</code></div><div class="line number12 index11 alt1"><code 
class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp 
keyword bold">for</code> <code class="cpp plain">(</code><code 
class="cpp color1 bold">int</code> <code class="cpp plain">i=0; i&lt;l; 
i++)</code></div><div class="line number13 index12 alt2"><code 
class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp keyword bold">if</code> <code class="cpp plain">(isCol)</code></div><div
 class="line number14 index13 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp plain">swap(mat[i][a],mat[i][b]);</code></div><div 
class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp keyword bold">else</code></div><div class="line number16 
index15 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp plain">swap(mat[a][i],mat[b][i]);</code></div><div 
class="line number17 index16 alt2"><code class="cpp plain">}</code></div><div
 class="line number18 index17 alt1">&nbsp;</div><div class="line 
number19 index18 alt2"><code class="cpp color1 bold">int</code> <code 
class="cpp plain">main()</code></div><div class="line number20 index19 
alt1"><code class="cpp plain">{</code></div><div class="line number21 
index20 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp color1 bold">int</code> <code class="cpp plain">max=0,my,mx;</code></div><div
 class="line number22 index21 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp plain">ifstream fin(</code><code class="cpp string">"treats.in"</code><code
 class="cpp plain">);</code></div><div class="line number23 index22 
alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code 
class="cpp plain">fin &gt;&gt; m &gt;&gt; n;</code></div><div 
class="line number24 index23 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code
 class="cpp color1 bold">int</code> <code class="cpp plain">i=0; i&lt;n;
 i++)</code></div><div class="line number25 index24 alt2"><code 
class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code
 class="cpp color1 bold">int</code> <code class="cpp plain">j=0; j&lt;m;
 j++)</code></div><div class="line number26 index25 alt1"><code 
class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp plain">fin &gt;&gt; mat[i][j];</code></div><div class="line 
number27 index26 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp plain">fin.close();</code></div><div class="line number28 
index27 alt1">&nbsp;</div><div class="line number29 index28 alt2"><code 
class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp 
keyword bold">while</code> <code class="cpp plain">(</code><code 
class="cpp keyword bold">true</code><code class="cpp plain">)</code></div><div
 class="line number30 index29 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp plain">{</code></div><div class="line number31 index30 alt2"><code
 class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp comments">// find the highest rate cow</code></div><div 
class="line number32 index31 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp color1 bold">int</code> <code class="cpp plain">max=0,y,x;</code></div><div
 class="line number33 index32 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code
 class="cpp color1 bold">int</code> <code class="cpp plain">i=0; i&lt;n;
 i++)</code></div><div class="line number34 index33 alt1"><code 
class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code
 class="cpp color1 bold">int</code> <code class="cpp plain">j=0; j&lt;m;
 j++)</code></div><div class="line number35 index34 alt2"><code 
class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp keyword bold">if</code> <code class="cpp plain">(!mark[i][j]
 &amp;&amp; max&lt;mat[i][j])</code></div><div class="line number36 
index35 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp plain">max=mat[i][j],y=i,x=j;</code></div><div class="line 
number37 index36 alt2">&nbsp;</div><div class="line number38 index37 
alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp comments">// if there is no more cows, break the loop</code></div><div
 class="line number39 index38 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp keyword bold">if</code> <code class="cpp plain">(max==0) </code><code
 class="cpp keyword bold">break</code><code class="cpp plain">;</code></div><div
 class="line number40 index39 alt1">&nbsp;</div><div class="line 
number41 index40 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp comments">// swap rows</code></div><div class="line number42
 index41 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp keyword bold">for</code> <code class="cpp plain">( ; 
y&gt;limy+1; y--) swapRC(y,y-1,</code><code class="cpp keyword bold">false</code><code
 class="cpp plain">);</code></div><div class="line number43 index42 
alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp comments">// swap columns</code></div><div class="line 
number44 index43 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp keyword bold">for</code> <code class="cpp plain">( ; 
x&gt;limx+1; x--) swapRC(x,x-1,</code><code class="cpp keyword bold">true</code><code
 class="cpp plain">);</code></div><div class="line number45 index44 
alt2">&nbsp;</div><div class="line number46 index45 alt1"><code 
class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp plain">mark[y][x]=</code><code class="cpp keyword bold">true</code><code
 class="cpp plain">;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code
 class="cpp comments">// mark the cow</code></div><div class="line 
number47 index46 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp keyword bold">if</code> <code class="cpp plain">(limy&lt;y) 
limy=y;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">//
 update limy</code></div><div class="line number48 index47 alt1"><code 
class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp keyword bold">if</code> <code class="cpp plain">(limx&lt;x) 
limx=x;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">//
 update limx</code></div><div class="line number49 index48 alt2"><code 
class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp 
plain">}</code></div><div class="line number50 index49 alt1">&nbsp;</div><div
 class="line number51 index50 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp plain">ofstream fout(</code><code class="cpp string">"treats.out"</code><code
 class="cpp plain">);</code></div><div class="line number52 index51 
alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code 
class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code
 class="cpp color1 bold">int</code> <code class="cpp plain">i=0; i&lt;n;
 i++)</code></div><div class="line number53 index52 alt2"><code 
class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp 
plain">{</code></div><div class="line number54 index53 alt1"><code 
class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code
 class="cpp color1 bold">int</code> <code class="cpp plain">j=0; 
j&lt;m-1; j++)</code></div><div class="line number55 index54 alt2"><code
 class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp plain">fout &lt;&lt; mat[i][j] &lt;&lt; </code><code 
class="cpp string">" "</code><code class="cpp plain">;</code></div><div 
class="line number56 index55 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp plain">fout &lt;&lt; mat[i][m-1] &lt;&lt; endl;</code></div><div
 class="line number57 index56 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code
 class="cpp plain">}</code></div><div class="line number58 index57 alt1"><code
 class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp 
plain">fout.close();</code></div><div class="line number59 index58 alt2"><code
 class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>


<script type="text/javascript" src="treats_files/shCore.js"></script>
<script type="text/javascript" src="treats_files/shBrushCpp.js"></script>
<script type="text/javascript" src="treats_files/shBrushJava.js"></script>
<link href="treats_files/shCore.css" rel="stylesheet" type="text/css">
<link href="treats_files/shThemeDefault.css" rel="stylesheet" 
type="text/css">
<script type="text/javascript">
     SyntaxHighlighter.all()
</script>


</body></html>